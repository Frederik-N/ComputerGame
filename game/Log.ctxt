#BlueJ class context
comment0.target=Log
comment0.text=\r\n\ A\ Log\ records\ what\ happened\ in\ a\ single\ instance\ of\ this\ game.\r\n\ Is\ uniquely\ determined\ by\ its\ String\ representation,\ and\ can\ thus\ be\ saved\ on\ the\ file\ system.\r\n\ @author\ Nikolaj\ Ignatieff\ Schwartzbach\r\n\ @version\ 1.0.0\r\n\r\n
comment1.params=seed\ settings
comment1.target=Log(int,\ Settings)
comment1.text=\r\n\ Instantiates\ a\ new\ Log\ object\ with\ a\ given\ seed,\ and\ Settings\ object.\r\n\ @param\ seed\ The\ seed\ of\ this\ log.\r\n\ @param\ settings\ The\ Settings\ object.\r\n
comment10.params=
comment10.target=boolean\ testCG5files()
comment10.text=\r\n\ Tests\ whether\ or\ not\ converting\ between\ a\ Log\ and\ its\ string\ representation\ is\ working\ correctly.\r\n\ Will\ load\ a\ Log\ from\ 'test.log'\ (input)\ using\ the\ constructor\ new\ Log(String\ s).\ \r\n\ Will\ then\ convert\ this\ Log\ object\ to\ its\ string\ representation\ (output),\ and\ compare\ input\ and\ output.\r\n\ If\ string\ conversion\ is\ wrong,\ an\ appropriate\ error\ message\ will\ be\ printed\ to\ the\ console.\r\n\ @return\ Returns\ 'true'\ if\ this\ Log\ is\ working\ correctly,\ and\ false\ otherwise.\r\n
comment11.params=
comment11.target=boolean\ testCG5strings()
comment11.text=\r\n\ Tests\ whether\ or\ not\ converting\ between\ a\ Log\ and\ its\ string\ representation\ is\ working\ correctly.\r\n\ Will\ load\ a\ Log\ from\ 'test.log'\ (input)\ using\ the\ constructor\ new\ Log(String\ s).\ \r\n\ Will\ then\ convert\ this\ Log\ object\ to\ its\ string\ representation\ (output),\ and\ compare\ input\ and\ output.\r\n\ If\ string\ conversion\ is\ wrong,\ an\ appropriate\ error\ message\ will\ be\ printed\ to\ the\ console.\r\n\ @return\ Returns\ 'true'\ if\ this\ Log\ is\ working\ correctly,\ and\ false\ otherwise.\r\n
comment2.params=time
comment2.target=void\ abort(int)
comment2.text=\r\n\ Instructs\ this\ Log\ that\ the\ Game\ was\ forcefully\ aborted.\r\n\ @param\ time\r\n
comment3.params=log
comment3.target=Log(java.lang.String)
comment3.text=\r\n\ Instantiates\ a\ new\ Log\ object\ from\ its\ String\ representation.\r\n\ @param\ s\ The\ string\ representation\ of\ this\ Log\ object.\r\n\ @throws\ SettingsException\ May\ be\ thrown\ if\ the\ Settings\ is\ corrupted\ (too\ few\ lines,\ illegal\ format).\r\n\ @throws\ LogException\ May\ be\ thrown\ if\ it\ is\ unable\ to\ properly\ create\ this\ log.\r\n
comment4.params=
comment4.target=Settings\ getSettings()
comment4.text=\r\n\ Gets\ the\ current\ Settings\ associated\ with\ this\ Log.\r\n\ @return\ A\ Settings\ object.\r\n
comment5.params=
comment5.target=int\ getSeed()
comment5.text=\r\n\ Gets\ the\ seed\ of\ this\ log.\r\n\ @return\ An\ integer\ representing\ the\ seed\ (passed\ to\ Random\ object)\ of\ this\ log.\r\n
comment6.params=t\ c
comment6.target=void\ add(int,\ City)
comment6.text=\r\n\ Associates\ a\ given\ time\ with\ a\ given\ city.\r\n\ Will\ then\ attempt\ to\ click\ on\ the\ same\ cities\ at\ the\ same\ time\ during\ playback\ to\ simulate\ the\ GUI\ player.\r\n\ @param\ t\ The\ current\ time.\r\n\ @param\ c\ The\ city\ which\ is\ clicked\ at\ the\ time\ 't'.\r\n
comment7.params=t
comment7.target=java.lang.String\ getChoice(int)
comment7.text=\r\n\ Gets\ which\ city\ was\ clicked\ at\ a\ given\ time.\r\n\ Will\ return\ 'null'\ if\ no\ city\ was\ clicked\ at\ the\ specified\ time.\r\n\ @param\ t\ The\ time\ step.\r\n\ @return\ A\ string\ representing\ the\ name\ of\ the\ city\ which\ was\ clicked\ at\ time\ 't'.\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment9.params=path
comment9.target=void\ save(java.lang.String)
comment9.text=\r\n\ Saves\ this\ Log\ to\ a\ given\ path.\r\n\ @param\ path\ The\ path\ to\ save\ this\ log\ to.\r\n\ @throws\ IOException\ May\ be\ thrown\ if\ various\ I/O-exceptions\ occur.\r\n
numComments=12
